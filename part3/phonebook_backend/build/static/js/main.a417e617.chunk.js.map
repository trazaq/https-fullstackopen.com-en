{"version":3,"sources":["components/Filter.js","components/Numbers.js","components/AddPersonForm.js","components/AddNotification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","person","name","number","Numbers","deletePerson","type","onClick","AddPersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","AddNotification","message","className","baseUrl","axios","get","newObject","post","id","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","addNotificationMsg","setAddNotificationMsg","window","confirm","phonebookService","then","filter","catch","error","console","log","useEffect","response","data","e","target","event","preventDefault","some","alert","newPersonObj","returnedPerson","concat","setTimeout","map","key","toLowerCase","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a417e617.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({person}) => <p>{person.name} {person.number}</p>\n\n\nexport default Filter","import React from 'react'\n\nconst Numbers = ({person, deletePerson}) =>\n{\n    return(\n        <tr>\n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td><button type=\"button\" onClick={() => deletePerson(person)}>delete</button></td>\n        </tr>\n    )\n}\nexport default Numbers","import React from 'react'\n\n\nconst AddPersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) =>\n{\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\n\n\n\nexport default AddPersonForm","import React from 'react'\n\n\nconst AddNotification = ({ message }) => \n{\n    if (message === null) \n    {\n      return null\n    }\n  \n    return (\n      <div className=\"addNotification\">\n        {message}\n      </div>\n    )\n}\n\n  export default AddNotification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => \n{\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => \n{\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => \n{\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) =>\n{\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\n  export default { getAll, create, update, remove }\n\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Numbers from './components/Numbers'\nimport AddPersonForm from './components/AddPersonForm'\nimport AddNotification from './components/AddNotification'\nimport phonebookService from './services/phonebook'\n\n//const SearchResults = ({ person }) => <p>{person.name} {person.number}</p>\n\n\nconst App = () =>\n{\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newSearch, setNewSearch] = useState('')\n    const [addNotificationMsg, setAddNotificationMsg] = useState(null)\n\n    //Only execute matches() if there's a value present in newSearch\n    //Otherwise this will get executed every render\n    const matches = () => \n    {\n        if (newSearch !== '') {\n            return persons.filter(person => \n                (person.name)\n                .toLowerCase()\n                .match((newSearch === '') ? \"^ .*$\" : `^${(newSearch).toLowerCase()}.*$`)\n            )\n        } else {\n            return []\n        }\n           \n    }\n\n    const addPerson = (event) =>\n    {\n        event.preventDefault();\n\n        //Prevent a new name from being added if it's already present\n        //some() only interates until it finds a match then breaks...more efficient \n        if (persons.some(person => person.name === newName))\n        {\n            alert(newName + \" is already added to the phonebook\")\n        } else \n        {\n            const newPersonObj =\n            {\n                name: newName,\n                number: newNumber\n            }\n            phonebookService\n                .create(newPersonObj)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson.data))\n            })\n\n            setNewName('')\n            setNewNumber('')\n            setNewSearch('')\n            \n            setAddNotificationMsg(\n                `Added ${newPersonObj.name}`\n            )\n            setTimeout(() => {\n                setAddNotificationMsg(null)\n            }, 4000)\n        }\n\n        \n    }\n\n    const deletePerson = (person) =>\n    {\n        //e.preventDefault()\n        let id = person.id\n        //console.log(id)\n       // const person = persons.find(person => person.id === id)\n       if (window.confirm(`Delete ${person.name} ?`) === true) \n       {\n            phonebookService\n            .remove(id)\n            .then(() => {\n                setPersons(persons.filter(person => person.id !== id))\n            })\n            .catch(error => \n            {\n                console.log(error)\n            })\n       }\n    }\n\n    const handleNameChange = (e) =>\n    {\n        setNewName(e.target.value)\n    }\n\n    const handleNumberChange = (e) =>\n    {\n        setNewNumber(e.target.value)\n    }\n\n    const handleSearchChange = (e) =>\n    {\n        setNewSearch(e.target.value)\n    }\n\n    /*\n    useEffect(() => {\n        axios\n          .get('http://localhost:3001/persons')\n          .then(response => {\n            setPersons(response.data)\n          })\n    }, [])\n    */\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }, [])\n    \n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <AddNotification message={addNotificationMsg} />\n            <div>\n                filter shown with: <input type=\"text\" value={newSearch} onChange={handleSearchChange} />\n            </div>\n            <br></br>\n                <AddPersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <h2>Numbers</h2>\n            <table>\n                <tbody>{persons.map(person => <Numbers key={person.id} person={person} deletePerson={deletePerson} />)}</tbody>\n            </table>\n            <div>\n                <h2>Search Results</h2>\n                {matches().map(person => <Filter key={person.name} person={person} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}